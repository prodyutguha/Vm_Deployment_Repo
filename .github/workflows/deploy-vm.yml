name: Create VM

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: "VM Name"
        required: true
      os_type:
        description: "OS Type"
        required: true
      vm_size:
        description: "VM Size"
        required: true
      os_disk_size:
        description: "OS Disk Size (GB)"
        required: true
      data_disk_size:
        description: "Data Disk Size (GB)"
        required: false



jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: hashicorp/setup-terraform@v3
      - run: terraform init -backend-config="key=${{ github.event.inputs.vm_name }}.tfstate"
      - name: Set default value for data_disk_size if empty
        run: |
          if [ -z "${{ github.event.inputs.data_disk_size }}" ]; then
            echo "DATA_DISK_SIZE=0" >> $GITHUB_ENV
          else
            echo "DATA_DISK_SIZE=${{ github.event.inputs.data_disk_size }}" >> $GITHUB_ENV
          fi
      - run: terraform apply -auto-approve -var "vm_name=${{ github.event.inputs.vm_name }}" -var "os_type=${{ github.event.inputs.os_type }}" -var "vm_size=${{ github.event.inputs.vm_size }}" -var "os_disk_size=${{ github.event.inputs.os_disk_size }}" -var "data_disk_size=$DATA_DISK_SIZE"

      - name: Set environment variables
        run: |
          echo "OS_TYPE=${{ github.event.inputs.os_type }}" >> $GITHUB_ENV
          echo "VM_NAME=${{ github.event.inputs.vm_name }}" >> $GITHUB_ENV

      - name: Generate VM TF file
        run: |
          if [[ "$OS_TYPE" == *Windows* ]]; then
            cat <<EOF > ${VM_NAME}.tf
            resource "azurerm_windows_virtual_machine" "vm" {
            name = "${VM_NAME}"
            resource_group_name = azurerm_resource_group.RG.name
            location            = azurerm_resource_group.RG.location
            size                = var.vm_size
            admin_username      = "azureuser"
            disable_password_authentication = false

            network_interface_ids = [
              azurerm_network_interface.NI.id,
            ]

            os_disk {
              caching              = "ReadWrite"
              storage_account_type = "Standard_LRS"
              name                 = "${var.vm_name}-osdisk"
              disk_size_gb         = var.os_disk_size
            }

            source_image_reference {
              publisher = local.image_reference.publisher
              offer     = local.image_reference.offer
              sku       = local.image_reference.sku
              version   = local.image_reference.version
            }
          }
          EOF
            else
              cat <<EOF > ${VM_NAME}.tf
              resource "azurerm_linux_virtual_machine" "vm" {
              name = "${VM_NAME}"
              resource_group_name = azurerm_resource_group.RG.name
              location            = azurerm_resource_group.RG.location
              size                = var.vm_size
              admin_username      = "azureuser"

              network_interface_ids = [
                azurerm_network_interface.NI.id,
              ]

              os_disk {
                caching              = "ReadWrite"
                storage_account_type = "Standard_LRS"
                name                 = "${var.vm_name}-osdisk"
                disk_size_gb         = var.os_disk_size
              }

              source_image_reference {
                publisher = local.image_reference.publisher
                offer     = local.image_reference.offer
                sku       = local.image_reference.sku
                version   = local.image_reference.version
              }
            }
          EOF
            fi

      - name: Push to separate repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/prodyutguha/vm_tf.git

          if [[ "$OS_TYPE" == *Windows* ]]; then
            cat <<EOF > ${VM_NAME}.tf
            resource "azurerm_windows_virtual_machine" "vm" {
            name = "${VM_NAME}"
          ...
          }
          EOF
            else
              cat <<EOF > ${VM_NAME}.tf
              resource "azurerm_linux_virtual_machine" "vm" {
              name = "${VM_NAME}"
            ...
            }
          EOF
            fi

          cp ${VM_NAME}.tf vm_tf/
          cd vm_tf
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add ${OS_TYPE} VM config for ${VM_NAME}"
          git push