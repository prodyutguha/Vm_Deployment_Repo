name: Destroy Azure VM by Name and OS Type

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: "Azure VM Name (e.g., prodyut)"
        required: true
      os_type:
        description: "OS Type (linux or windows)"
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init -backend-config="key=${{ github.event.inputs.vm_name }}.tfstate"

    - name: Find Resource Address by VM Name and OS Type
      id: find_resource
      run: |
        VM_NAME="${{ github.event.inputs.vm_name }}"
        OS_TYPE="${{ github.event.inputs.os_type }}"
        RESOURCE_TYPE="azurerm_${OS_TYPE}_virtual_machine"

        RESOURCE=$(terraform state list | while read addr; do
          if [[ "$addr" == ${RESOURCE_TYPE}.* ]]; then
            if terraform state show "$addr" | grep -q "name *= *\"$VM_NAME\""; then
              echo $addr
              break
            fi
          fi
        done)

        if [ -z "$RESOURCE" ]; then
          echo "No matching VM found for name $VM_NAME and OS type $OS_TYPE"
          exit 1
        fi

        echo "Found Terraform resource: $RESOURCE"
        echo "resource=$RESOURCE" >> $GITHUB_OUTPUT

    - name: Terraform Plan Before Destroy
      run: terraform plan -destroy -target=${{ steps.find_resource.outputs.resource }}

    - name: Terraform Destroy
      run: terraform destroy -auto-approve -target=${{ steps.find_resource.outputs.resource }}
