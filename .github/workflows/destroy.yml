name: Destroy Azure VM Manually

on:
  workflow_dispatch:
    inputs:
      vm_name:
        description: "VM Name"
        required: true
      os_type:
        description: "OS Type (linux or windows)"
        required: true

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform init -backend-config="key=${{ github.event.inputs.vm_name }}.tfstate"

    - name: Get target resource name
      id: get_resource
      run: |
        # Construct terraform resource name, adjust 'linux' or 'windows' prefix if needed
        OS_TYPE="${{ github.event.inputs.os_type }}"
        VM_NAME="${{ github.event.inputs.vm_name }}"
        
        # Assuming your resource naming pattern is:
        # azurerm_linux_virtual_machine.linux_vm["vm_name"] or
        # azurerm_windows_virtual_machine.windows_vm["vm_name"]
        
        if [ "$OS_TYPE" = "linux" ]; then
          RESOURCE="azurerm_linux_virtual_machine.linux_vm[\"$VM_NAME\"]"
        else
          RESOURCE="azurerm_windows_virtual_machine.windows_vm[\"$VM_NAME\"]"
        fi
        
        echo "resource=$RESOURCE" >> $GITHUB_OUTPUT

    - name: Terraform Plan Destroy Target VM
      run: terraform plan -destroy -input=false -lock=false -target=${{ steps.get_resource.outputs.resource }}

    - name: Terraform Destroy Target VM
      run: terraform destroy -auto-approve -input=false -lock=false -target=${{ steps.get_resource.outputs.resource }}
